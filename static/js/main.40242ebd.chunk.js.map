{"version":3,"sources":["images/furnace.PNG","images/seller.PNG","images/crafter.PNG","images/starter.PNG","images/transporter.PNG","images/move.PNG","images/delete.PNG","images/rotate.PNG","actions/toolboxAction.js","actions/types.js","components/Cell/Cell.js","actions/cellsAction.js","actions/editionButtonAction.js","components/Board/Board.js","components/ButtonToolBox/ButtonToolBox.js","utils/EditionTypes.js","components/EditionButton/EditionButton.js","components/ToolBox/ToolBox.js","components/MachineDescription/MachineDescription.js","components/Fabrica/Fabrica.js","reducers/toolboxReducer.js","reducers/editionButtonReducer.js","reducers/cellsReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","selectMachine","machine","dispatch","type","payload","unselectMachine","Cell","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","hasMachine","props","onClick","selectCell","cellId","id","selectedMachine","addMachineToCell","inherits","createClass","key","value","react_default","a","createElement","className","selected","src","img","direction","alt","Component","actions","cell","connect","state","machineSelected","Board","components_Cell_Cell","cells","map","newCell","createCells","ButtonToolBox","triggerSelectMachineAction","name","price","defaultProps","DELETE","MOVE","ROTATE","EditionButton","selectedCell","clearCell","unselectCelda","rotateMachine","selectedCelda","celda","ToolBox","toolSeleccionado","components_ButtonToolBox_ButtonToolBox","seleccionado","components_EditionButton_EditionButton","crearBoton","boton_start","boton_crafter","boton_seller","boton_furnace","boton_transporter","createEditionButton","boton_borrar","boton_move","boton_rotar","MachineDescription","getName","charAt","toUpperCase","slice","getPrice","Fabrica","ToolBox_ToolBox_ToolBox","components_Board_Board","components_MachineDescription_MachineDescription","initialState","i","push","undefined","createEmptyCells","c","objectSpread","addMachine","rotate","combineReducers","action","editionAction","middlewares","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","es","Fabrica_Fabrica_Fabrica","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.40242ebd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/furnace.617ec208.PNG\";","module.exports = __webpack_public_path__ + \"static/media/seller.3d538c9e.PNG\";","module.exports = __webpack_public_path__ + \"static/media/crafter.42bc2297.PNG\";","module.exports = __webpack_public_path__ + \"static/media/starter.8d09d4f3.PNG\";","module.exports = __webpack_public_path__ + \"static/media/transporter.0c46748f.PNG\";","module.exports = __webpack_public_path__ + \"static/media/move.cbfcb2fb.PNG\";","module.exports = __webpack_public_path__ + \"static/media/delete.6e7a49f4.PNG\";","module.exports = __webpack_public_path__ + \"static/media/rotate.d45efe18.PNG\";","import { SELECT_MACHINE, UNSELECT_MACHINE } from './types';\n\n\nexport const selectMachine = (machine) => dispatch => {\n    dispatch({\n        type: SELECT_MACHINE,\n        payload: machine\n    })\n}\n\nexport const unselectMachine = () => dispatch => {\n    dispatch({\n        type: UNSELECT_MACHINE,\n        payload: null\n    })\n}","export const SELECT_MACHINE = 'SELECT_MACHINE'\nexport const UNSELECT_MACHINE = 'UNSELECT_MACHINE'\n\nexport const SELECT_CELDA = 'SELECT_CELDA'\nexport const UNSELECT_CELL = 'UNSELECT_CELL'\nexport const EDIT_MACHINE = 'EDIT_MACHINE'\n\nexport const UPDATE_CELLS = 'UPDATE_CELLS'\nexport const CLEAR_CELL = 'CLEAR_CELL'\nexport const ADD_MACHINE_TO_CELL = 'ADD_MACHINE_TO_CELL'\nexport const SELECT_MACHINE_2 = 'SELECT_MACHINE_2'\nexport const ROTATE_MACHINE = 'ROTATE_MACHINE'\nexport const MOVE_MACHINE = 'MOVE_MACHINE'\n","import React, { Component } from 'react'\nimport './Cell.css'\nimport { connect } from 'react-redux';\nimport { unselectMachine } from '../../actions/toolboxAction'\nimport { addMachineToCell, selectMachine } from '../../actions/cellsAction'\nimport { selectCell } from '../../actions/editionButtonAction'\n\nexport class Cell extends Component {\n\n  hasMachine = () => {\n    return this.props.machine\n  }\n\n  onClick = () => {\n    if (this.hasMachine()) {\n      this.props.selectCell({cellId: this.props.id, machine:this.props.machine})\n      this.props.selectMachine(this.props.id)\n    } else if (this.props.selectedMachine){\n      this.props.addMachineToCell(this.props.selectedMachine, this.props.id)\n      this.props.unselectMachine()\n    }\n  }\n\n\n  render() {\n    return (\n      <div className={'Cell ' + (this.props.selected ? 'selected' : '')} onClick={this.onClick}>\n        { this.props.machine ? <img src={this.props.machine.img} className={this.props.machine.direction ? this.props.machine.direction : ''} alt=\"actions\"/> : null }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  selectedMachine: state.machineSelected.machine,\n})\n\nconst actions = { \n  unselectMachine, \n  addMachineToCell, \n  selectCell,\n  selectMachine\n}\n\nexport default connect(mapStateToProps, actions)(Cell)","import { UPDATE_CELLS, CLEAR_CELL, ADD_MACHINE_TO_CELL, SELECT_MACHINE_2, ROTATE_MACHINE } from './types';\n\n\nexport const updateCell = (cells) => dispatch => {\n    dispatch({\n        type: UPDATE_CELLS,\n        payload: cells\n    })\n}\n\nexport const clearCell = (cellId) => dispatch => {\n    dispatch({\n        type: CLEAR_CELL,\n        payload: cellId\n    })\n}\n\nexport const addMachineToCell = (machine, cellId) => dispatch => {\n    dispatch({\n        type: ADD_MACHINE_TO_CELL,\n        payload: {\n            machine: machine,\n            cellId\n        }\n    })\n}\n\nexport const selectMachine = (cellId) => dispatch => {\n    dispatch({\n        type: SELECT_MACHINE_2,\n        payload: cellId\n    })\n}\n\nexport const rotateMachine = (cellId) => dispatch => {\n    dispatch({\n        type: ROTATE_MACHINE,\n        payload: cellId\n    })\n}\n\n","import { EDIT_MACHINE, SELECT_CELDA, UNSELECT_CELL } from './types';\n\n\nexport const selectCell = (cell) => dispatch => {\n    dispatch({\n        type: SELECT_CELDA,\n        payload: cell\n    })\n}\n\nexport const unselectCelda = () => dispatch => {\n    dispatch({\n        type: UNSELECT_CELL,\n        payload: null\n    })\n}\n\nexport const editMachine = (editionAction) => dispatch => {\n    dispatch({\n        type: EDIT_MACHINE,\n        payload: editionAction\n    })\n}\n\n","import React, { Component } from 'react'\nimport Cell from '../Cell/Cell'\nimport './Board.css'\nimport { connect } from 'react-redux'\n\n\nexport class Board extends Component {\n\n  newCell(cell) {\n    return <Cell key={cell.id} id={cell.id} machine={cell.machine} selected={cell.selected} />\n  }\n\n  createCells() {\n      return this.props.cells.map(this.newCell)\n  }\n  \n  render() {\n    return (\n      <div className=\"Board\">\n        {this.createCells()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  cells: state.cells\n})\n\nexport default connect(mapStateToProps, null)(Board)\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { selectMachine, unselectMachine } from '../../actions/toolboxAction'\n\n\nexport class ButtonToolBox extends Component {\n\n  triggerSelectMachineAction = () =>  {\n    this.props.selectMachine({ name: this.props.name, img: this.props.src, price: this.props.price})\n  }\n\n  render() {\n    if (this.props.selected && this.props.name === this.props.machine.name){\n        return <div className=\"ButtonToolbox seleccionado\" >\n                  <img src={this.props.src} alt=\"actions\" />\n                </div>;\n    } else {\n        return <div className=\"ButtonToolbox\" onClick={this.triggerSelectMachineAction} >\n                  <img src={this.props.src} alt=\"actions\"/>\n                </div>;\t\n    }\n  }\n}\n\n\nButtonToolBox.propTypes = {\n    name: PropTypes.string,\n    selected: PropTypes.bool\n}\n\nButtonToolBox.defaultProps = { \n  selected: false\n}\n\nconst mapStateToProps = state => ({\n  machine: state.machineSelected.machine,\n  selected: state.machineSelected.selected\n})\n\nexport default connect(mapStateToProps, { selectMachine, unselectMachine })(ButtonToolBox)","export const DELETE = 'DELETE'\nexport const MOVE = 'MOVE'\nexport const ROTATE = 'ROTATE'","import React, { Component } from 'react'\nimport './EditionButton.css'\nimport { connect } from 'react-redux'\nimport { clearCell, rotateMachine } from '../../actions/cellsAction'\nimport { unselectCelda } from '../../actions/editionButtonAction'\nimport { selectMachine } from '../../actions/toolboxAction'\nimport { DELETE, ROTATE, MOVE } from '../../utils/EditionTypes'\n\n\nexport class EditionButton extends Component {\n\n\n    onClick = () => {\n        if(this.props.selectedCell) {\n            switch(this.props.type) {\n                case DELETE:\n                    this.props.clearCell(this.props.selectedCell.cellId)\n                    this.props.unselectCelda()\n                    break\n                case ROTATE:\n                    this.props.rotateMachine(this.props.selectedCell.cellId)\n                    this.props.unselectCelda()\n                    break\n                case MOVE:\n                        this.props.clearCell(this.props.selectedCell.cellId)\n                        this.props.selectMachine(this.props.selectedCell.machine)\n                        this.props.unselectCelda()\n                        break\n                default:\n                    this.props.unselectCelda()\n            }\n        }\n    }\n\n    clearCell = (cellId) => this.props.clearCell(cellId)\n\n    render() {\n        if (this.props.selected && this.props.name === this.props.machine.name){\n            return <div className=\"EditionButton seleccionado\" >\n                    <img src={this.props.src} alt=\"actions\" />\n                    </div>;\n        } else {\n            return <div className=\"EditionButton\" onClick={this.onClick} >\n                    <img src={this.props.src} alt=\"actions\"/>\n                    </div>;\t\n        }\n    }\n  \n}\n\nconst mapStateToProps = state => ({\n    selectedCell: state.selectedCelda.celda,\n})\n\nconst actions = {\n    clearCell,\n    unselectCelda,\n    rotateMachine,\n    selectMachine\n}\n\nexport default connect(mapStateToProps, actions)(EditionButton)","import React, { Component } from 'react';\nimport ButtonToolBox from '../ButtonToolBox/ButtonToolBox';\nimport './ToolBox.css';\n\nimport boton_furnace     from '../../images/furnace.PNG';\nimport boton_seller      from '../../images/seller.PNG';\nimport boton_crafter     from '../../images/crafter.PNG';\nimport boton_start       from '../../images/starter.PNG';\nimport boton_transporter from '../../images/transporter.PNG';\n\nimport boton_move   from '../../images/move.PNG';\nimport boton_borrar from '../../images/delete.PNG';\nimport boton_rotar  from '../../images/rotate.PNG';\nimport EditionButton from '../EditionButton/EditionButton';\n\nimport { DELETE, MOVE, ROTATE } from '../../utils/EditionTypes'\n\n\nexport default class ToolBox extends Component {\n\n   constructor(props) {\n    super(props);\n    this.state = { toolSeleccionado: \"\" };\n  }\n\n  crearBoton(machine){\n    return <ButtonToolBox \n              seleccionado={machine.name === this.state.toolSeleccionado}\n              name={machine.name} \n              src={machine.src} \n              price={machine.price}\n            /> \n  }\n\n  createEditionButton(props){\n    return <EditionButton \n              seleccionado={props.name === this.state.toolSeleccionado}\n              machine={props.name} \n              src={props.src} \n              type={props.type}\n            /> \n  }\n\n  render() {\n    return (\n      <div className=\"ToolBox\">\n        <h3>Máquinas</h3>\n          <table>\n            <tbody>\n              <tr>\n                <td>{this.crearBoton({name: \"starter\", src: boton_start, price: 400 })}</td>\n                <td>{this.crearBoton({name: \"crafter\", src: boton_crafter, price: 500 })}</td>\n              </tr>\n              <tr>\n                <td>{this.crearBoton({name: \"seller\", src: boton_seller, price: 300 })}</td>\n                <td>{this.crearBoton({name: \"furnace\", src: boton_furnace, price: 200 })}</td>\n              </tr>\n              <tr>\n                <td>{this.crearBoton({name: \"transporter\", src: boton_transporter, price: 100 })}</td>\n              </tr>\n            </tbody>\n          </table>\n\n          <h3>Edición</h3>\n          <table>\n            <tbody>\n              <tr>\n                <td>{this.createEditionButton({name: \"delete\", src: boton_borrar, type: DELETE })}</td>\n                <td>{this.createEditionButton({name: \"move\", src: boton_move, type: MOVE})}</td>\n              </tr>\n              <tr>\n                <td>{this.createEditionButton({name: \"rotate\", src: boton_rotar, type: ROTATE })}</td>\n              </tr>\n            </tbody>\n          </table>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport './MachineDescription.css'\n\nimport { connect } from 'react-redux';\n\n\nexport class MachineDescription extends Component {\n\n    getName = () => {\n        const machine = this.props.selectedMachine \n        return machine && machine.name ? machine.name.charAt(0).toUpperCase() + machine.name.slice(1) : ''\n    }\n\n    getPrice = () => {\n        const machine = this.props.selectedMachine \n        return machine && machine.price ? `$${machine.price}` : ''\n    }\n\n    render() {\n        return (\n            <div className=\"MachineDescription\">\n                <h3>Descripción</h3>\n                <div className=\"description\">\n                    <p>Name:<span>{this.getName()}</span></p>\n                    <p>Precio:<span>{this.getPrice()}</span></p>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedMachine: state.machineSelected.machine,\n})\n\nexport default connect(mapStateToProps, null)(MachineDescription)\n","import React, { Component } from 'react'\nimport './Fabrica.css'\nimport Board from '../Board/Board'\nimport ToolBox from '../ToolBox/ToolBox'\nimport MachineDescription from '../MachineDescription/MachineDescription'\n\n\nexport default class Fabrica extends Component {\n\n  render() {\n    return (\n      <div className=\"Fabrica\">\n        <ToolBox /> \n        <Board />\n        <MachineDescription />\n      </div>\n    )\n  }\n\n}","import { SELECT_MACHINE, UNSELECT_MACHINE } from '../actions/types';\n\nconst initialState = {  }\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case SELECT_MACHINE:\n            return {\n                ...state,\n                machine: action.payload,\n                selected: true\n            }\n        case UNSELECT_MACHINE:\n            return {\n                ...state,\n                machine: action.payload,\n                selected: false\n            }\n        default:\n            return state        \n    }\n}","import { EDIT_MACHINE, SELECT_CELDA, UNSELECT_CELL } from '../actions/types';\n\nconst initialState = {  }\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case SELECT_CELDA:\n            return {\n                ...state,\n                celda: action.payload\n            }\n            case UNSELECT_CELL:\n            return {\n                ...state,\n                celda: null\n            }\n        case EDIT_MACHINE:\n            return {\n                ...state,\n                editionAction: action.payload\n            }\n        default:\n            return state        \n    }\n}","import { CLEAR_CELL, ADD_MACHINE_TO_CELL, SELECT_MACHINE_2, ROTATE_MACHINE } from '../actions/types';\n\n\n\n\n\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case ROTATE_MACHINE:\n            return rotateMachine(state, action.payload)\n        case SELECT_MACHINE_2:\n            return selectMachine(state, action.payload)\n        case ADD_MACHINE_TO_CELL:\n            return addMachine(state, action.payload)\n        case CLEAR_CELL:\n            return clearCell(state, action.payload)\n        default:\n            return state    \n    }\n}\n\nconst createEmptyCells = () => {\n    let cells = []\n    for (let i = 1; i <= 100; i++) {\n        cells.push({\n            id: i, \n            machine: undefined\n        })\n    }\n    return cells;\n}\n\nconst initialState = createEmptyCells()\n\nconst clearCell = (cells, cellId) => {\n    return cells.map(c => c.id === cellId ? {id:c.id} : c)\n}\n\nconst selectMachine = (cells, cellId) => {\n    return cells.map(c => c.id === cellId ? {...c, selected: true} : {...c, selected: false})\n}\n\nconst addMachine = (cells, payload) => {\n    return cells.map(c => c.id === payload.cellId ? \n        {\n            id:c.id, \n            machine: {...payload.machine, direction: payload.machine.direction ? payload.machine.direction : 'SOUTH'}\n        } : c\n    )\n}\n\nconst rotateMachine = (cells, cellId) => {\n    return cells.map(c => c.id === cellId ? {id:c.id, machine: rotate(c.machine)} : c)\n}\n\nconst rotate = (machine) => {\n    switch(machine.direction) {\n        case 'SOUTH':\n            return {...machine, direction:'EAST'}\n        case 'EAST':\n            return {...machine, direction:'NORTH'}\n        case 'NORTH':\n            return {...machine, direction:'WEST'}\n        case 'WEST':\n            return {...machine, direction:'SOUTH'}\n        default:\n            return machine\n    }\n}","import { combineReducers } from 'redux';\nimport toolboxReducer from './toolboxReducer';\nimport editionButtonReducer from './editionButtonReducer';\nimport cellsReducer from './cellsReducer';\n\nexport default combineReducers({\n    machineSelected: toolboxReducer,\n    selectedCelda: editionButtonReducer,\n    cells: cellsReducer\n})","import { createStore, applyMiddleware } from 'redux';\nimport thunk from  'redux-thunk';\nimport rootReducer from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst initialState = {}\n\nconst middlewares = [thunk]\n\nconst store = createStore(\n    rootReducer, \n    initialState, \n    composeWithDevTools(\n        applyMiddleware(...middlewares)\n    )\n)\n\nexport default store","import React, { Component } from 'react';\nimport './App.css';\nimport Fabrica from './components/Fabrica/Fabrica';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"Container\">\n          <h1>Revolución Industrial</h1>\n          <div className=\"App\"> \n            <Fabrica />\n          </div>\n        </div>\n      </Provider>\n    )\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}